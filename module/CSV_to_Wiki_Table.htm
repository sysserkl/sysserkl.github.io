<html>
<head>
<title>CSV to Wiki Table Converter</title>
<style>
body, p { font-family: calibri,verdana,arial,sans-serif; font-size: 13px; margin: 0.8em; padding: 0px; text-align: left; }
div { border: 0px none; margin: 0px; padding: 0px; }
table, tbody, tr, td, th { font-size: 13px; line-height: 1.5em; padding: 3px; border-collapse: collapse; }
img { border: medium none; }
input { border: medium none; }
td { border: 1px solid rgb(187, 187, 187); padding: 8px; text-align: left; }
td.noborder { border: medium none; }
</style>
  <script>
	function isIE()
	{
		return	navigator.appName == "Microsoft Internet Explorer";
	}

	function hideInstruction()
	{
		var instr = document.getElementById("csvInstruction");

		instr.style.visibility = 'hidden';
	}

	function showInstruction()
	{
		var instr = document.getElementById("csvInstruction");
		var csv = document.getElementById("csv").value;

		instr.style.visibility = (csv == '') ? 'visible' : 'hidden';
	}

	function detectDelimiter(text, delimOptions)
	{
		var delim = ',';
		var maxMatch = 0;
		var specialChars = /[\\\[\].+*?\(\)\^$|]/;
		for (var i = 0; i < delimOptions.length; i++) {
			var sepchar = delimOptions[i].value;
			if (sepchar.match(specialChars))
				sepchar = '\\' + sepchar;
			var sepcharRegEx = new RegExp(sepchar, 'g');
			var matched = text.match(sepcharRegEx);
			var matches = (matched === null) ? 0 : matched.length;
			if (matches > maxMatch) {
				delim = delimOptions[i].value;
				maxMatch = matches;
			}
		}
		return delim;
	}

	function stdev(arr)
	{
		if (arr.length < 2)
			return 0;
		var total = 0;
		for (var i = 0; i < arr.length; i++)
			total += arr[i];
		var avg = total / arr.length;
		total = 0;
		for (i = 0; i < arr.length; i++)
			total += (arr[i] - avg) * (arr[i] - avg);
		return Math.sqrt(total / (arr.length - 1));
	}

	function detectHeader(text)
	{
		var alphaRegEx = /[a-zA-Z]/g;
		var digitRegEx = /[0-9]/g;

		var lines = text.split('\n');
		if (lines.length < 3)
			return false;
		var alphaMatches = [];
		var digitMatches = [];
		for (var i = 0; i < Math.min(20, lines.length); i++) {
			var matched = lines[i].match(alphaRegEx);
			alphaMatches.push(matched == null ? 0 : matched.length);
			matched = lines[i].match(digitRegEx);
			digitMatches.push(matched == null ? 0 : matched.length);
		}
		var varAllAlpha = stdev(alphaMatches);
		var varAllDigit = stdev(digitMatches);
		var varAlpha = stdev(alphaMatches.slice(1));
		var varDigit = stdev(digitMatches.slice(1));
		return Math.max(varAllAlpha / (varAlpha + 1E-6), varAllDigit / (varDigit + 1E-6)) > 2;
	}

	function convertCsv(evt)
	{
		evt = evt ? evt : (window.event ? event : null);
		if (!evt)
			return;
		var elem = evt.target ? evt.target : (evt.srcElement ? evt.srcElement : null);
		if (!elem)
			return;
		var csv = document.getElementById("csv").value.replace(/(^[ \n]*)|([ \n]*$)/g, '');
		var wiki = document.getElementById("wiki");
		var preview = document.getElementById("preview");
		if (csv.length == 0) {
			wiki.value = "";
			preview.innerHTML = "";
			return;
		}
		var head1st = document.getElementById("head1st");
		var delimOptions = [
			document.getElementById("tabdelim"),
			document.getElementById("commadelim"),
			document.getElementById("colondelim"),
			document.getElementById("semicolondelim"),
			document.getElementById("pipedelim"),
			document.getElementById("slashdelim")
		];
		var mapStatus = [
			/*       x  ,  "  \n   */
		  	/* 0 */ [1, 0, 2, 0],
		  	/* 1 */ [1, 0, 1, 0],
		  	/* 2 */ [3, 3, 5, 0],
			/* 3 */ [3, 3, 4, 0],
			/* 4 */ [1, 0, 3, 0],
			/* 5 */ [0, 0, 3, 0]
		];
		var mapOutput = [
			/*       x       ,     "       \n   */
			/* 0 */ ['x', ' || ',  '', '\n|-\n| '],
			/* 1 */ ['x', ' || ', '"', '\n|-\n| '],
			/* 2 */ ['x',    ',',  '', '\n|-\n| '],
			/* 3 */ ['x',    ',',  '', '\n|-\n| '],
			/* 4 */ ['x', ' || ', '"', '\n|-\n| '],
			/* 5 */ ['x', ' || ', '"', '\n|-\n| ']
		];
		var mapPreview = [
			/*       x       ,     "       \n   */
			/* 0 */ ['x', ' </td><td> ',  '', '\n</td></tr>\n<tr><td>'],
			/* 1 */ ['x', ' </td><td> ', '"', '\n</td></tr>\n<tr><td>'],
			/* 2 */ ['x',    ',',  '', '\n</td></tr>\n<tr><td>'],
			/* 3 */ ['x',    ',',  '', '\n</td></tr>\n<tr><td>'],
			/* 4 */ ['x', ' </td><td> ', '"', '\n</td></tr>\n<tr><td>'],
			/* 5 */ ['x', ' </td><td> ', '"', '\n</td></tr>\n<tr><td>']
		];

		var delimiter = document.getElementById("delimiter").value;
		if (delimiter == "auto")
			delimiter = detectDelimiter(csv, delimOptions);
		if (elem != head1st && !head1st.checked)
			head1st.checked = detectHeader(csv);
		var outputString = '{| class="wikitable sortable"\n|-\n' + (head1st.checked ? '!' : '|') + ' ';
		var previewString = '<table><tr' + (head1st.checked ? ' class="header"' : '') + '><td>\n';
		var stat = 0;
		for (var i = 0; i < csv.length; i++) {
			var c = csv.charAt(i);
			if (c == '\r')
				continue;
			var input;
			if (c == delimiter)
				input = 1;
			else if (c == '"')
				input = 2;
			else if (c == '\n')
				input = 3;
			else
				input = 0;
			var w = mapOutput[stat][input];
			var pv = mapPreview[stat][input];
			if (w == 'x') {
				w = c;
				if (w == '|')
					w = '&#124;';
				if (w == '&')
					w = '&amp;';
				else if (w == '<')
					w = '&lt;';
				else if (w == '>')
					w = '&gt;';
			}
			if (pv == 'x') {
				pv = c;
				if (pv == '&')
					pv = '&amp;';
				else if (pv == '<')
					pv = '&lt;';
				else if (pv == '>')
					pv = '&gt;';
			}
			outputString += w;
			previewString += pv;
			stat = mapStatus[stat][input];
		}
		outputString += '\n|}\n';
		previewString += '</td></tr></table>\n';
		wiki.value = outputString;
		preview.innerHTML = "Preview (not supporting all MediaWiki formattings):<br /><br />" + previewString;
	  }

	  function paste2Clipboard(obj)
	  {
		obj.focus();
		obj.select();
		var maintext = obj.value;
		if (window.clipboardData) {
			window.clipboardData.setData("Text", maintext);
			return;
		}
		if (window.netscape) {
			netscape.security.PrivilegeManager.enablePrivilege('UniversalXPConnect');
			var clip = Components.classes['@mozilla.org/widget/clipboard;1'].createInstance(Components.interfaces.nsIClipboard);
			if (!clip)
				return;
			var trans = Components.classes['@mozilla.org/widget/transferable;1'].createInstance(Components.interfaces.nsITransferable);
			if (!trans)
				return;
			trans.addDataFlavor('text/unicode');
			var str = new Object();
			var len = new Object();
			var str = Components.classes["@mozilla.org/supports-string;1"].createInstance(Components.interfaces.nsISupportsString);
			var copytext=maintext;
			str.data=copytext;
			trans.setTransferData("text/unicode",str,copytext.length*2);
			var clipid=Components.interfaces.nsIClipboard;
			if (!clip)
				return;
			clip.setData(trans,null,clipid.kGlobalClipboard);
			return;
		}
	  }
  </script>
  <style>
	  input {
		  border: none;
	  }

	  td {
		  border: 1px solid #bbbbbb;
		  padding: 8px;
		  text-align: left;
	  }

	  table {
		  border-collapse: collapsed;
	  }

	  .header td {
		  font-weight: bold;
		  background-color: #3090e0;
		  color: white;
	  }

	  td.noborder {
		  border: none;
	  }
  </style>
</head>
<body style="" onload="showInstruction();">
<p>from:<a href="http://mlei.net/shared/tool/csv-wiki.htm" target=_blank>http://mlei.net/shared/tool/csv-wiki.htm</a> 2017-04-16</p>
<table>
  <tr><td class="noborder">&nbsp;
  </td><td class="noborder">
	  <div style="padding:0px;font-size:0.9em;">
	  <b>Delimiter:</b><br />
	  <select id="delimiter" name="delimiter" onchange="convertCsv(event);">
	  <option id="autodelim" value="auto" />Auto detect<br />
	  <option id="tabdelim" value="&#09;" />Tab/Pasted from Excel<br />
	  <option id="commadelim" value="," />Comma (,)<br />
	  <option id="colondelim" value=":" />Colon (:)<br /><br />
	  <option id="semicolondelim" value=";" />Semicolon (;)<br /><br />
	  <option id="pipedelim" value="|" />Pipe (|)<br /><br />
	  <option id="slashdelim" value="/" />Slash (/)<br /><br />
	  </select>
	  <br /><br />
	  <input id="head1st" type="checkbox" onclick="convertCsv(event);" />The first row is the header<br />
	  </div>
  </td>
  </tr><tr>
  <td class="noborder">
  <div id="csvInstruction" style="visibility:hidden;position:relative;left:12px;top:30px;z-index:1;color:#bbbbbb;font-size:1.2em;">
	  Input the comma separated text here...
  </div>
  <div>
  <textarea id="csv" style="width:600px;height:400px;padding:10px;" onfocus="hideInstruction();" onblur="showInstruction();" onchange="convertCsv(event);" onkeyup="convertCsv(event);"></textarea>
  </div>
  </td><td class="noborder">
  <script>
	if (isIE())
	  	document.write("Double-click the text below to copy it to the clipboard.");
	else
	  	document.write("Double-click the text below to select all.");
  </script>
  <br />
  <textarea id="wiki" style="width:600px;height:400px;padding:10px;" readonly="readonly" ondblclick="paste2Clipboard(this);"></textarea>
  </td></tr>
  </table>
  <div id="preview" style="margin:15px;"></div>
</body>
</html>

